/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SubscriptionInvoiceItem, SubscriptionInvoiceItem$ } from "./subscriptioninvoiceitem";
import { TimePeriod, TimePeriod$ } from "./timeperiod";
import { z } from "zod";

export type SubscriptionInvoiceAttributes = {
    /**
     * A period of time between a start and end point.
     */
    billingPeriod: TimePeriod;
    invoiceItems: Array<SubscriptionInvoiceItem>;
    /**
     * The invoice still requires payment if true.
     */
    outstanding: boolean;
    /**
     * The date and time an invoice was updated.
     */
    updatedAt?: string | undefined;
    /**
     * The date and time an invoice was created.
     */
    createdAt?: string | undefined;
};

/** @internal */
export namespace SubscriptionInvoiceAttributes$ {
    export type Inbound = {
        billing_period: TimePeriod$.Inbound;
        invoice_items: Array<SubscriptionInvoiceItem$.Inbound>;
        outstanding: boolean;
        updated_at?: string | undefined;
        created_at?: string | undefined;
    };

    export const inboundSchema: z.ZodType<SubscriptionInvoiceAttributes, z.ZodTypeDef, Inbound> = z
        .object({
            billing_period: TimePeriod$.inboundSchema,
            invoice_items: z.array(SubscriptionInvoiceItem$.inboundSchema),
            outstanding: z.boolean(),
            updated_at: z.string().optional(),
            created_at: z.string().optional(),
        })
        .transform((v) => {
            return {
                billingPeriod: v.billing_period,
                invoiceItems: v.invoice_items,
                outstanding: v.outstanding,
                ...(v.updated_at === undefined ? null : { updatedAt: v.updated_at }),
                ...(v.created_at === undefined ? null : { createdAt: v.created_at }),
            };
        });

    export type Outbound = {
        billing_period: TimePeriod$.Outbound;
        invoice_items: Array<SubscriptionInvoiceItem$.Outbound>;
        outstanding: boolean;
        updated_at?: string | undefined;
        created_at?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SubscriptionInvoiceAttributes> =
        z
            .object({
                billingPeriod: TimePeriod$.outboundSchema,
                invoiceItems: z.array(SubscriptionInvoiceItem$.outboundSchema),
                outstanding: z.boolean(),
                updatedAt: z.string().optional(),
                createdAt: z.string().optional(),
            })
            .transform((v) => {
                return {
                    billing_period: v.billingPeriod,
                    invoice_items: v.invoiceItems,
                    outstanding: v.outstanding,
                    ...(v.updatedAt === undefined ? null : { updated_at: v.updatedAt }),
                    ...(v.createdAt === undefined ? null : { created_at: v.createdAt }),
                };
            });
}
