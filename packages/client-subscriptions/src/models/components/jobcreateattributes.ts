/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { JobType, JobType$ } from "./jobtype";
import { z } from "zod";

export type JobCreateAttributes = {
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    externalRef?: string | undefined;
    /**
     * The type of job. One of the following:
     *
     * @remarks
     *  - `billing_run` - a billing run job.
     *  - `payment_run` - a payment run job.
     *
     */
    jobType: JobType;
};

/** @internal */
export namespace JobCreateAttributes$ {
    export type Inbound = {
        external_ref?: string | undefined;
        job_type: JobType;
    };

    export const inboundSchema: z.ZodType<JobCreateAttributes, z.ZodTypeDef, Inbound> = z
        .object({
            external_ref: z.string().optional(),
            job_type: JobType$,
        })
        .transform((v) => {
            return {
                ...(v.external_ref === undefined ? null : { externalRef: v.external_ref }),
                jobType: v.job_type,
            };
        });

    export type Outbound = {
        external_ref?: string | undefined;
        job_type: JobType;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JobCreateAttributes> = z
        .object({
            externalRef: z.string().optional(),
            jobType: JobType$,
        })
        .transform((v) => {
            return {
                ...(v.externalRef === undefined ? null : { external_ref: v.externalRef }),
                job_type: v.jobType,
            };
        });
}
