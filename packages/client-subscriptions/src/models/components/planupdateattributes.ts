/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NullablePrice, NullablePrice$ } from "./nullableprice";
import { z } from "zod";

/**
 * (*Reserved for future use*) Set all plans to `active`. Only `active` plans are available for use.
 */
export enum PlanUpdateAttributesStatus {
    Active = "active",
    Draft = "draft",
    Archive = "archive",
}

/**
 * The unit of time in which billing intervals are measured.
 */
export enum PlanUpdateAttributesBillingIntervalType {
    Day = "day",
    Week = "week",
    Month = "month",
    Year = "year",
}

/**
 * Enables you to specify recurring payments. If `end_behavior` is `roll`, customers pay regularly and repeatedly. If `end_behavior` is `close`, customers pay a total amount in a limited number of partial payments.
 */
export enum PlanUpdateAttributesEndBehavior {
    Close = "close",
    Roll = "roll",
}

export type PlanUpdateAttributes = {
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    externalRef?: string | null | undefined;
    name?: string | undefined;
    /**
     * The plan description to display to customers.
     */
    description?: string | null | undefined;
    /**
     * (*Reserved for future use*) Set all plans to `active`. Only `active` plans are available for use.
     */
    status?: PlanUpdateAttributesStatus | undefined;
    /**
     * The unit of time in which billing intervals are measured.
     */
    billingIntervalType?: PlanUpdateAttributesBillingIntervalType | undefined;
    /**
     * The number of intervals between issuing bills.
     */
    billingFrequency?: number | undefined;
    /**
     * The day of the week when weekly subscriptions are billed.
     */
    billingDay?: number | null | undefined;
    /**
     * The date of the month when monthly subscriptions are billed.
     */
    billingMonthDay?: number | null | undefined;
    /**
     * The number of intervals from the start of the subscription before billing starts. Used with `billing_interval_type`. For example, if `billing_interval_type` is `months`, and `trial_period` is `1`, the trial period is 1 month.
     */
    trialPeriod?: number | null | undefined;
    /**
     * The length of time for which a subscription plan is valid. For example, six months after which the plan is renewed.
     */
    planLength?: number | undefined;
    /**
     * Enables you to specify recurring payments. If `end_behavior` is `roll`, customers pay regularly and repeatedly. If `end_behavior` is `close`, customers pay a total amount in a limited number of partial payments.
     */
    endBehavior?: PlanUpdateAttributesEndBehavior | undefined;
    /**
     * The subscriber can pause a subscription.
     */
    canPause?: boolean | undefined;
    /**
     * The subscriber can resume a paused subscription.
     */
    canResume?: boolean | undefined;
    /**
     * The subscriber can cancel a subscription.
     */
    canCancel?: boolean | undefined;
    /**
     * A percentage discount on the total cost of any products within an offering. For example, you can configure a percentage that equates the cost of a plan to the total value of all products within the offering, reduced by a percentage. For example, if you specify `10`, a 10% discount is applied to the total value of all repeat products in an offering.
     */
    basePricePercentage?: number | null | undefined;
    fixedPrice?: Record<string, NullablePrice> | null | undefined;
};

/** @internal */
export const PlanUpdateAttributesStatus$ = z.nativeEnum(PlanUpdateAttributesStatus);

/** @internal */
export const PlanUpdateAttributesBillingIntervalType$ = z.nativeEnum(
    PlanUpdateAttributesBillingIntervalType
);

/** @internal */
export const PlanUpdateAttributesEndBehavior$ = z.nativeEnum(PlanUpdateAttributesEndBehavior);

/** @internal */
export namespace PlanUpdateAttributes$ {
    export type Inbound = {
        external_ref?: string | null | undefined;
        name?: string | undefined;
        description?: string | null | undefined;
        status?: PlanUpdateAttributesStatus | undefined;
        billing_interval_type?: PlanUpdateAttributesBillingIntervalType | undefined;
        billing_frequency?: number | undefined;
        billing_day?: number | null | undefined;
        billing_month_day?: number | null | undefined;
        trial_period?: number | null | undefined;
        plan_length?: number | undefined;
        end_behavior?: PlanUpdateAttributesEndBehavior | undefined;
        can_pause?: boolean | undefined;
        can_resume?: boolean | undefined;
        can_cancel?: boolean | undefined;
        base_price_percentage?: number | null | undefined;
        fixed_price?: Record<string, NullablePrice$.Inbound> | null | undefined;
    };

    export const inboundSchema: z.ZodType<PlanUpdateAttributes, z.ZodTypeDef, Inbound> = z
        .object({
            external_ref: z.nullable(z.string()).optional(),
            name: z.string().optional(),
            description: z.nullable(z.string()).optional(),
            status: PlanUpdateAttributesStatus$.optional(),
            billing_interval_type: PlanUpdateAttributesBillingIntervalType$.optional(),
            billing_frequency: z.number().int().optional(),
            billing_day: z.nullable(z.number().int()).optional(),
            billing_month_day: z.nullable(z.number().int()).optional(),
            trial_period: z.nullable(z.number().int()).optional(),
            plan_length: z.number().int().optional(),
            end_behavior: PlanUpdateAttributesEndBehavior$.optional(),
            can_pause: z.boolean().optional(),
            can_resume: z.boolean().optional(),
            can_cancel: z.boolean().optional(),
            base_price_percentage: z.nullable(z.number()).optional(),
            fixed_price: z.nullable(z.record(NullablePrice$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.external_ref === undefined ? null : { externalRef: v.external_ref }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.billing_interval_type === undefined
                    ? null
                    : { billingIntervalType: v.billing_interval_type }),
                ...(v.billing_frequency === undefined
                    ? null
                    : { billingFrequency: v.billing_frequency }),
                ...(v.billing_day === undefined ? null : { billingDay: v.billing_day }),
                ...(v.billing_month_day === undefined
                    ? null
                    : { billingMonthDay: v.billing_month_day }),
                ...(v.trial_period === undefined ? null : { trialPeriod: v.trial_period }),
                ...(v.plan_length === undefined ? null : { planLength: v.plan_length }),
                ...(v.end_behavior === undefined ? null : { endBehavior: v.end_behavior }),
                ...(v.can_pause === undefined ? null : { canPause: v.can_pause }),
                ...(v.can_resume === undefined ? null : { canResume: v.can_resume }),
                ...(v.can_cancel === undefined ? null : { canCancel: v.can_cancel }),
                ...(v.base_price_percentage === undefined
                    ? null
                    : { basePricePercentage: v.base_price_percentage }),
                ...(v.fixed_price === undefined ? null : { fixedPrice: v.fixed_price }),
            };
        });

    export type Outbound = {
        external_ref?: string | null | undefined;
        name?: string | undefined;
        description?: string | null | undefined;
        status?: PlanUpdateAttributesStatus | undefined;
        billing_interval_type?: PlanUpdateAttributesBillingIntervalType | undefined;
        billing_frequency?: number | undefined;
        billing_day?: number | null | undefined;
        billing_month_day?: number | null | undefined;
        trial_period?: number | null | undefined;
        plan_length?: number | undefined;
        end_behavior?: PlanUpdateAttributesEndBehavior | undefined;
        can_pause?: boolean | undefined;
        can_resume?: boolean | undefined;
        can_cancel?: boolean | undefined;
        base_price_percentage?: number | null | undefined;
        fixed_price?: Record<string, NullablePrice$.Outbound> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PlanUpdateAttributes> = z
        .object({
            externalRef: z.nullable(z.string()).optional(),
            name: z.string().optional(),
            description: z.nullable(z.string()).optional(),
            status: PlanUpdateAttributesStatus$.optional(),
            billingIntervalType: PlanUpdateAttributesBillingIntervalType$.optional(),
            billingFrequency: z.number().int().optional(),
            billingDay: z.nullable(z.number().int()).optional(),
            billingMonthDay: z.nullable(z.number().int()).optional(),
            trialPeriod: z.nullable(z.number().int()).optional(),
            planLength: z.number().int().optional(),
            endBehavior: PlanUpdateAttributesEndBehavior$.optional(),
            canPause: z.boolean().optional(),
            canResume: z.boolean().optional(),
            canCancel: z.boolean().optional(),
            basePricePercentage: z.nullable(z.number()).optional(),
            fixedPrice: z.nullable(z.record(NullablePrice$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.externalRef === undefined ? null : { external_ref: v.externalRef }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.billingIntervalType === undefined
                    ? null
                    : { billing_interval_type: v.billingIntervalType }),
                ...(v.billingFrequency === undefined
                    ? null
                    : { billing_frequency: v.billingFrequency }),
                ...(v.billingDay === undefined ? null : { billing_day: v.billingDay }),
                ...(v.billingMonthDay === undefined
                    ? null
                    : { billing_month_day: v.billingMonthDay }),
                ...(v.trialPeriod === undefined ? null : { trial_period: v.trialPeriod }),
                ...(v.planLength === undefined ? null : { plan_length: v.planLength }),
                ...(v.endBehavior === undefined ? null : { end_behavior: v.endBehavior }),
                ...(v.canPause === undefined ? null : { can_pause: v.canPause }),
                ...(v.canResume === undefined ? null : { can_resume: v.canResume }),
                ...(v.canCancel === undefined ? null : { can_cancel: v.canCancel }),
                ...(v.basePricePercentage === undefined
                    ? null
                    : { base_price_percentage: v.basePricePercentage }),
                ...(v.fixedPrice === undefined ? null : { fixed_price: v.fixedPrice }),
            };
        });
}
