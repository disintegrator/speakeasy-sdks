/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    SubscriptionInvoicePaymentAttributes,
    SubscriptionInvoicePaymentAttributes$,
} from "./subscriptioninvoicepaymentattributes";
import {
    SubscriptionInvoicePaymentMeta,
    SubscriptionInvoicePaymentMeta$,
} from "./subscriptioninvoicepaymentmeta";
import {
    SubscriptionInvoicePaymentType,
    SubscriptionInvoicePaymentType$,
} from "./subscriptioninvoicepaymenttype";
import { z } from "zod";

export type SubscriptionInvoicePayment = {
    /**
     * The unique identifier.
     */
    id: string;
    /**
     * This represents the type of resource object being returned. Always `subscription_invoice_payment`.
     */
    type?: SubscriptionInvoicePaymentType | undefined;
    attributes: SubscriptionInvoicePaymentAttributes;
    meta: SubscriptionInvoicePaymentMeta;
};

/** @internal */
export namespace SubscriptionInvoicePayment$ {
    export type Inbound = {
        id: string;
        type?: SubscriptionInvoicePaymentType | undefined;
        attributes: SubscriptionInvoicePaymentAttributes$.Inbound;
        meta: SubscriptionInvoicePaymentMeta$.Inbound;
    };

    export const inboundSchema: z.ZodType<SubscriptionInvoicePayment, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
            type: SubscriptionInvoicePaymentType$.default(
                SubscriptionInvoicePaymentType.SubscriptionInvoicePayment
            ),
            attributes: SubscriptionInvoicePaymentAttributes$.inboundSchema,
            meta: SubscriptionInvoicePaymentMeta$.inboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                type: v.type,
                attributes: v.attributes,
                meta: v.meta,
            };
        });

    export type Outbound = {
        id: string;
        type: SubscriptionInvoicePaymentType;
        attributes: SubscriptionInvoicePaymentAttributes$.Outbound;
        meta: SubscriptionInvoicePaymentMeta$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SubscriptionInvoicePayment> = z
        .object({
            id: z.string(),
            type: SubscriptionInvoicePaymentType$.default(
                SubscriptionInvoicePaymentType.SubscriptionInvoicePayment
            ),
            attributes: SubscriptionInvoicePaymentAttributes$.outboundSchema,
            meta: SubscriptionInvoicePaymentMeta$.outboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                type: v.type,
                attributes: v.attributes,
                meta: v.meta,
            };
        });
}
