/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type OfferingUpdateAttributes = {
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    externalRef?: string | null | undefined;
    /**
     * The name of the offering.
     */
    name?: string | undefined;
    /**
     * The offering description to display to customers.
     */
    description?: string | null | undefined;
};

/** @internal */
export namespace OfferingUpdateAttributes$ {
    export type Inbound = {
        external_ref?: string | null | undefined;
        name?: string | undefined;
        description?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<OfferingUpdateAttributes, z.ZodTypeDef, Inbound> = z
        .object({
            external_ref: z.nullable(z.string()).optional(),
            name: z.string().optional(),
            description: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.external_ref === undefined ? null : { externalRef: v.external_ref }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.description === undefined ? null : { description: v.description }),
            };
        });

    export type Outbound = {
        external_ref?: string | null | undefined;
        name?: string | undefined;
        description?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OfferingUpdateAttributes> = z
        .object({
            externalRef: z.nullable(z.string()).optional(),
            name: z.string().optional(),
            description: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.externalRef === undefined ? null : { external_ref: v.externalRef }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.description === undefined ? null : { description: v.description }),
            };
        });
}
