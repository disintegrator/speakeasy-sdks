/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type PriceFormatting = {
    /**
     * The unformatted amount for the objects.
     */
    amount: number;
    /**
     * The three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) in uppercase, associated with a price.
     */
    currency: string;
    /**
     * The formatted amount for the objects.
     */
    formatted: string;
};

/** @internal */
export namespace PriceFormatting$ {
    export type Inbound = {
        amount: number;
        currency: string;
        formatted: string;
    };

    export const inboundSchema: z.ZodType<PriceFormatting, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.number().int(),
            currency: z.string(),
            formatted: z.string(),
        })
        .transform((v) => {
            return {
                amount: v.amount,
                currency: v.currency,
                formatted: v.formatted,
            };
        });

    export type Outbound = {
        amount: number;
        currency: string;
        formatted: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PriceFormatting> = z
        .object({
            amount: z.number().int(),
            currency: z.string(),
            formatted: z.string(),
        })
        .transform((v) => {
            return {
                amount: v.amount,
                currency: v.currency,
                formatted: v.formatted,
            };
        });
}
