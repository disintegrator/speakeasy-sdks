/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { JobCreateAttributes, JobCreateAttributes$ } from "./jobcreateattributes";
import { SubscriptionJobType, SubscriptionJobType$ } from "./subscriptionjobtype";
import { z } from "zod";

export type JobCreate = {
    type?: SubscriptionJobType | undefined;
    attributes: JobCreateAttributes;
};

/** @internal */
export namespace JobCreate$ {
    export type Inbound = {
        type?: SubscriptionJobType | undefined;
        attributes: JobCreateAttributes$.Inbound;
    };

    export const inboundSchema: z.ZodType<JobCreate, z.ZodTypeDef, Inbound> = z
        .object({
            type: SubscriptionJobType$.default(SubscriptionJobType.SubscriptionJob),
            attributes: JobCreateAttributes$.inboundSchema,
        })
        .transform((v) => {
            return {
                type: v.type,
                attributes: v.attributes,
            };
        });

    export type Outbound = {
        type: SubscriptionJobType;
        attributes: JobCreateAttributes$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JobCreate> = z
        .object({
            type: SubscriptionJobType$.default(SubscriptionJobType.SubscriptionJob),
            attributes: JobCreateAttributes$.outboundSchema,
        })
        .transform((v) => {
            return {
                type: v.type,
                attributes: v.attributes,
            };
        });
}
