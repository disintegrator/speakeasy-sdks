/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type RelationshipData = {
    /**
     * The unique identifier.
     */
    id: string;
    type: string;
};

/** @internal */
export namespace RelationshipData$ {
    export type Inbound = {
        id: string;
        type: string;
    };

    export const inboundSchema: z.ZodType<RelationshipData, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
            type: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
                type: v.type,
            };
        });

    export type Outbound = {
        id: string;
        type: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RelationshipData> = z
        .object({
            id: z.string(),
            type: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
                type: v.type,
            };
        });
}
